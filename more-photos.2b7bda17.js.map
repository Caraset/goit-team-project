{"version":3,"sources":["js/more-photos.js"],"names":["refs","openModalList","document","querySelector","modal","modalGalleryList","targetsBigImages","querySelectorAll","belowFoldItems","belowFoldImages","galleryModalItems","targets","galleryNextBtn","galleryBackBtn","svgLoaderWrapper","galleryInitiatorList","addEventListener","event","console","dir","target","parentElement","children","attributes","listItems","childNodes","log","list","map","num","lazyLoad","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","img","setAttribute","closest","classList","add","hasAttribute","removeAttribute","disconnect","observe","setTimeout","listIsClicked","currentTarget","contains","removeEventListener","mq","w","matches","i","li","remove","window","matchMedia","length","element","toggle","nextElem","backElem"],"mappings":"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","file":"more-photos.2b7bda17.js","sourceRoot":"../src","sourcesContent":["(() => {\n  // Image src replace (for lazy-loading)\n  const refs = {\n    openModalList: document.querySelector('[data-photos-list]'),\n    modal: document.querySelector('[data-gallery-modal]'),\n    modalGalleryList: document.querySelector('[data-gallery-list]'),\n    targetsBigImages: document.querySelectorAll('[data-gallery-image]'),\n    belowFoldItems: document.querySelectorAll('[data-li-below-fold]'),\n    belowFoldImages: document.querySelectorAll('[data-photos-below-fold]'),\n    galleryModalItems: document.querySelectorAll('[data-gallery-item]'),\n    targets: document.querySelectorAll('[data-photos-lazy]'),\n    galleryNextBtn: document.querySelector('[data-gallery-next]'),\n    galleryBackBtn: document.querySelector('[data-gallery-back]'),\n    svgLoaderWrapper: document.querySelector('[data-photos-loader]'),\n  };\n\n  const galleryInitiatorList = document.querySelector('.more-photos__list');\n  galleryInitiatorList.addEventListener('click', event => {\n    console.dir(event.target.parentElement.children[0].attributes);\n  });\n\n  const listItems = galleryInitiatorList.childNodes;\n  console.log(listItems);\n\n  const list = listItems.map(num => {\n    return num;\n  });\n  console.log(list);\n  // // filter get element\n  // map\n  // find    // find 'cat' return list.       elem = 0,     if 0 return elem;\n  // reduce\n  // array.forEach(element => { });\n  //\n  // event is an argument. Current element\n\n  // lets use one intersection observer\n  // var io = new IntersectionObserver(\n  // entries => {\n  // console.log.(entries);\n  // }, {\n  // Using default options. Details below.\n  // }\n  // );\n  // Start observing an element\n  // io.observe(element);\n\n  // Stop observing an element\n  // io.unobserve(element);\n\n  //Disable entire IntersectionObserver\n  //io.disconnect();\n\n  /* document.addEventListener(\"DOMContentLoaded\", function() {\n  var lazyImages = [].slice.call(document.querySelectorAll(\"img.lazy\"));\n\n  if (\"IntersectionObserver\" in window) {\n    let lazyImageObserver = new IntersectionObserver(function(entries, observer) {\n      entries.forEach(function(entry) {\n        if (entry.isIntersecting) {\n          let lazyImage = entry.target;\n          lazyImage.src = lazyImage.dataset.src;\n          lazyImage.srcset = lazyImage.dataset.srcset;\n          lazyImage.classList.remove(\"lazy\");\n          lazyImageObserver.unobserve(lazyImage);\n        }\n      });\n    });\n\n    lazyImages.forEach(function(lazyImage) {\n      lazyImageObserver.observe(lazyImage);\n    });\n  } else {\n    // Possibly fall back to event handlers here\n  }\n}); */\n\n  const lazyLoad = target => {\n    const io = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const img = entry.target;\n\n          img.setAttribute('src', '#'); //img starts to load after scr is set to \"#\".\n\n          entry.target.closest('[data-gallery-list]') !== refs.modalGalleryList &&\n            img.classList.add('appear');\n\n          if (img.hasAttribute('data-photos-below-fold')) {\n            img.removeAttribute('data-photos-below-fold');\n          }\n\n          observer.disconnect(); // after loading the img - it removes the observer from the main thread.\n        }\n      });\n    });\n\n    io.observe(target);\n  };\n\n  setTimeout(() => {\n    // change to = onReadystatechange or smth similar - instead of timeout.\n    refs.targets.forEach(lazyLoad);\n  }, 250);\n\n  const listIsClicked = event => {\n    event.currentTarget == refs.openModalList &&\n      refs.modal.classList.contains('is-hidden') &&\n      refs.targetsBigImages.forEach(lazyLoad);\n    setTimeout(() => {\n      refs.openModalList.removeEventListener('click', listIsClicked);\n    }, 250);\n  };\n\n  refs.openModalList.addEventListener('click', listIsClicked);\n\n  // media query js\n  const belowTablet = window.matchMedia('(max-width: 767px)');\n\n  // function runs at specific viewport width.\n  function mq(w) {\n    if (!w.matches) return;\n    else {\n      refs.svgLoaderWrapper.addEventListener('click', event => {\n        if (event.target !== svgLoaderWrapper) return;\n        else {\n          for (let i = 2; i >= 0; i--) {\n            const li = refs.belowFoldItems[i];\n            const img = refs.belowFoldImages[i];\n\n            if (li.classList.contains('is-hidden')) {\n              img(lazyLoad); // change to download 3 items per 1 time.\n\n              if (li.hasAttribute('data-li-below-fold')) {\n                li.removeAttribute('data-li-below-fold');\n              }\n            }\n\n            li.classList.remove('is-hidden');\n          }\n        }\n      });\n    }\n  }\n\n  mq(belowTablet);\n\n  // closes mobile window on screen rotation. Use if need. Delete this if not need.\n  // tablet.addEventListener('change', e => {\n  //   if (!e.matches) return;\n  //   (!refsMobile.menu.classList.contains('is-hidden') ||\n  //     refsMobile.openMenuBtn.getAttribute('aria-expanded') === 'true') &&\n  //     closeMenuAndFocusLog(refsMobile.focusTarget);\n  // });\n\n  // carousel for refs.targetsBigImages\n  // toggle classes for next listItem without 'is-hidden' = slide forwards\n  refs.galleryNextBtn.addEventListener('click', () => {\n    for (let i = 0; i < refs.galleryModalItems.length; i++) {\n      const element = refs.galleryModalItems[i];\n\n      if (element.classList.contains('current-slide')) {\n        element.classList.toggle('current-slide'), element.classList.toggle('is-hidden');\n\n        let nextElem = 0;\n        if (i === refs.galleryModalItems.length - 1) {\n          nextElem = refs.galleryModalItems[0];\n        } else {\n          nextElem = refs.galleryModalItems[i + 1];\n        }\n\n        nextElem.classList.toggle('is-hidden'), nextElem.classList.toggle('current-slide');\n        return;\n      }\n    }\n  });\n\n  // toggle classes for back listItem without 'is-hidden' = slide backwards\n  refs.galleryBackBtn.addEventListener('click', () => {\n    for (let i = refs.galleryModalItems.length - 1; i >= 0; i--) {\n      const element = refs.galleryModalItems[i];\n\n      if (element.classList.contains('current-slide')) {\n        element.classList.toggle('current-slide'), element.classList.toggle('is-hidden');\n\n        let backElem = 0;\n        if (i === 0) {\n          backElem = refs.galleryModalItems[refs.galleryModalItems.length - 1];\n        } else {\n          backElem = refs.galleryModalItems[i - 1];\n        }\n\n        backElem.classList.toggle('is-hidden'), backElem.classList.toggle('current-slide');\n        return;\n      }\n    }\n  });\n})();\n"]}