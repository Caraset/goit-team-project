{"version":3,"sources":["js/more-photos.js"],"names":["refs","openModalList","document","querySelector","modal","galleryList","targetsBigImages","querySelectorAll","belowFoldItems","belowFoldImages","galleryModalItems","targets","galleryNextBtn","galleryBackBtn","svgLoaderWrapper","lazyLoad","target","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","img","setAttribute","closest","classList","add","console","log","disconnect","observe","setTimeout","listIsClicked","event","currentTarget","contains","removeEventListener","addEventListener","tablet","window","matchMedia","mq","w","matches","remove","i","length","element","className","toggle","nextElem","backElem"],"mappings":";AAAA,MAEQA,MAAAA,EAAO,CACXC,cAAeC,SAASC,cAAc,sBACtCC,MAAOF,SAASC,cAAc,wBAC9BE,YAAaH,SAASC,cAAc,uBACpCG,iBAAkBJ,SAASK,iBAAiB,wBAC5CC,eAAgBN,SAASK,iBAAiB,wBAC1CE,gBAAiBP,SAASK,iBAAiB,4BAC3CG,kBAAmBR,SAASK,iBAAiB,uBAC7CI,QAAST,SAASK,iBAAiB,sBACnCK,eAAgBV,SAASC,cAAc,uBACvCU,eAAgBX,SAASC,cAAc,uBACvCW,iBAAkBZ,SAASC,cAAc,yBAGrCY,EAAWC,IACJ,IAAIC,qBAAqB,CAACC,EAASC,KAC5CD,EAAQE,QAAQC,IACVA,GAAAA,EAAMC,eAAgB,CAClBC,MAAAA,EAAMF,EAAML,OAElBO,EAAIC,aAAa,MAAO,KAExBH,EAAML,OAAOS,QAAQ,yBAA2BzB,EAAKK,aACnDkB,EAAIG,UAAUC,IAAI,UAEpBC,QAAQC,IAAI,eACZV,EAASW,kBAKZC,QAAQf,IAGbgB,WAAW,KAEThC,EAAKW,QAAQS,QAAQL,IACpB,KAEGkB,MAAAA,EAAgBC,IACpBA,EAAMC,eAAiBnC,EAAKC,eAC1BD,EAAKI,MAAMsB,UAAUU,SAAS,cAC9BpC,EAAKM,iBAAiBc,QAAQL,GAChCiB,WAAW,KACThC,EAAKC,cAAcoC,oBAAoB,QAASJ,IAC/C,MAGLjC,EAAKC,cAAcqC,iBAAiB,QAASL,GAUzCM,IAAAA,EAASC,OAAOC,WAAW,sBAC/BF,EAAOD,iBAAiB,SATfI,SAAGC,GACLA,EAAEC,SACP5C,EAAKc,iBAAiBwB,iBAAiB,QAAS,KAC9CtC,EAAKS,gBAAgBW,QAAQL,GAC7Bf,EAAKQ,eAAekB,UAAUmB,OAAO,eAKPH,CAAGH,IAYrCvC,EAAKY,eAAe0B,iBAAiB,QAAS,KACvC,IAAA,IAAIQ,EAAI,EAAGA,EAAI9C,EAAKU,kBAAkBqC,OAAQD,IAAK,CAChDE,MAAAA,EAAUhD,EAAKU,kBAAkBoC,GAEnCE,GAAAA,EAAQtB,UAAUU,SAAS,iBAAkB,CAC/CR,QAAQC,IAAImB,EAAQC,WACpBD,EAAQtB,UAAUwB,OAAO,iBAAkBF,EAAQtB,UAAUwB,OAAO,aAEhEC,IAAAA,EAAW,EAQf,OANEA,EADEL,IAAM9C,EAAKU,kBAAkBqC,OAAS,EAC7B/C,EAAKU,kBAAkB,GAEvBV,EAAKU,kBAAkBoC,EAAI,IAG/BpB,UAAUwB,OAAO,kBAAcC,EAASzB,UAAUwB,OAAO,qBAOxElD,EAAKa,eAAeyB,iBAAiB,QAAS,KACvC,IAAA,IAAIQ,EAAI9C,EAAKU,kBAAkBqC,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACrDE,MAAAA,EAAUhD,EAAKU,kBAAkBoC,GAEnCE,GAAAA,EAAQtB,UAAUU,SAAS,iBAAkB,CAC/CR,QAAQC,IAAImB,EAAQC,WACpBD,EAAQtB,UAAUwB,OAAO,iBAAkBF,EAAQtB,UAAUwB,OAAO,aAEhEE,IAAAA,EAAW,EAQf,OANEA,EADQ,IAANN,EACS9C,EAAKU,kBAAkBV,EAAKU,kBAAkBqC,OAAS,GAEvD/C,EAAKU,kBAAkBoC,EAAI,IAG/BpB,UAAUwB,OAAO,kBAAcE,EAAS1B,UAAUwB,OAAO,sBA9G1E","file":"more-photos.b9b9c8fe.js","sourceRoot":"../src","sourcesContent":["(() => {\n  // Image src replace (for lazy-loading)\n  const refs = {\n    openModalList: document.querySelector('[data-photos-list]'),\n    modal: document.querySelector('[data-gallery-modal]'),\n    galleryList: document.querySelector('[data-gallery-list]'),\n    targetsBigImages: document.querySelectorAll('[data-gallery-image]'),\n    belowFoldItems: document.querySelectorAll('[data-li-below-fold]'),\n    belowFoldImages: document.querySelectorAll('[data-photos-below-fold]'),\n    galleryModalItems: document.querySelectorAll('[data-gallery-item]'),\n    targets: document.querySelectorAll('[data-photos-lazy]'),\n    galleryNextBtn: document.querySelector('[data-gallery-next]'),\n    galleryBackBtn: document.querySelector('[data-gallery-back]'),\n    svgLoaderWrapper: document.querySelector('[data-photos-loader]'),\n  };\n\n  const lazyLoad = target => {\n    const io = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const img = entry.target;\n\n          img.setAttribute('src', '#'); //img starts to load after scr is set to \"#\".\n\n          entry.target.closest('[data-gallery-list]') !== refs.galleryList &&\n            img.classList.add('appear');\n\n          console.log('imageLoaded');\n          observer.disconnect(); // after loading the img - it removes the observer from the main thread.\n        }\n      });\n    });\n\n    io.observe(target);\n  };\n\n  setTimeout(() => {\n    // change to = onReadystatechange or smth similar - instead of timeout.\n    refs.targets.forEach(lazyLoad);\n  }, 250);\n\n  const listIsClicked = event => {\n    event.currentTarget == refs.openModalList &&\n      refs.modal.classList.contains('is-hidden') &&\n      refs.targetsBigImages.forEach(lazyLoad);\n    setTimeout(() => {\n      refs.openModalList.removeEventListener('click', listIsClicked);\n    }, 250);\n  };\n\n  refs.openModalList.addEventListener('click', listIsClicked);\n\n  function mq(w) {\n    if (!w.matches) return;\n    refs.svgLoaderWrapper.addEventListener('click', () => {\n      refs.belowFoldImages.forEach(lazyLoad); // change to download 3 items per 1 time.\n      refs.belowFoldItems.classList.remove('is-hidden');\n    });\n  }\n\n  let tablet = window.matchMedia('(min-width: 768px)');\n  tablet.addEventListener('change', mq(tablet));\n\n  // closes mobile window on screen rotation. Use if need. Delete if not.\n  // tablet.addEventListener('change', e => {\n  //   if (!e.matches) return;\n  //   (!refsMobile.menu.classList.contains('is-hidden') ||\n  //     refsMobile.openMenuBtn.getAttribute('aria-expanded') === 'true') &&\n  //     closeMenuAndFocusLog(refsMobile.focusTarget);\n  // });\n\n  // carousel for refs.targetsBigImages\n  // toggle classes for next listItem without 'is-hidden' = slide forwards\n  refs.galleryNextBtn.addEventListener('click', () => {\n    for (let i = 0; i < refs.galleryModalItems.length; i++) {\n      const element = refs.galleryModalItems[i];\n\n      if (element.classList.contains('current-slide')) {\n        console.log(element.className);\n        element.classList.toggle('current-slide'), element.classList.toggle('is-hidden');\n\n        let nextElem = 0;\n        if (i === refs.galleryModalItems.length - 1) {\n          nextElem = refs.galleryModalItems[0];\n        } else {\n          nextElem = refs.galleryModalItems[i + 1];\n        }\n\n        nextElem.classList.toggle('is-hidden'), nextElem.classList.toggle('current-slide');\n        return;\n      }\n    }\n  });\n\n  // toggle classes for back listItem without 'is-hidden' = slide backwards\n  refs.galleryBackBtn.addEventListener('click', () => {\n    for (let i = refs.galleryModalItems.length - 1; i >= 0; i--) {\n      const element = refs.galleryModalItems[i];\n\n      if (element.classList.contains('current-slide')) {\n        console.log(element.className);\n        element.classList.toggle('current-slide'), element.classList.toggle('is-hidden');\n\n        let backElem = 0;\n        if (i === 0) {\n          backElem = refs.galleryModalItems[refs.galleryModalItems.length - 1];\n        } else {\n          backElem = refs.galleryModalItems[i - 1];\n        }\n\n        backElem.classList.toggle('is-hidden'), backElem.classList.toggle('current-slide');\n        return;\n      }\n    }\n  });\n})();\n"]}