{"version":3,"sources":["js/more-photos.js"],"names":["document","querySelectorAll","forEach","target","IntersectionObserver","entries","observer","entry","isIntersecting","img","setAttribute","classList","add","console","log","disconnect","observe"],"mappings":";AAEkBA,SAASC,iBAAiB,sBAiBlCC,QAfSC,IACJ,IAAIC,qBAAqB,CAACC,EAASC,KAC5CD,EAAQH,QAAQK,IACVA,GAAAA,EAAMC,eAAgB,CAClBC,MAAAA,EAAMF,EAAMJ,OAClBM,EAAIC,aAAa,MAAO,KACxBD,EAAIE,UAAUC,IAAI,UAClBC,QAAQC,IAAI,eACZR,EAASS,kBAKZC,QAAQb","file":"more-photos.5248876a.js","sourceRoot":"../src","sourcesContent":["(() => {\n  // Image src replace (for lazy-loading)\n  const targets = document.querySelectorAll('[data-photos-lazy]');\n\n  const lazyLoad = target => {\n    const io = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const img = entry.target;\n          img.setAttribute('src', '#'); //img starts to load after scr is set to \"#\".\n          img.classList.add('appear');\n          console.log('imageLoaded');\n          observer.disconnect(); // after loading the img - remove the observer from the main thread.\n        }\n      });\n    });\n\n    io.observe(target);\n  };\n  targets.forEach(lazyLoad);\n})();\n"]}